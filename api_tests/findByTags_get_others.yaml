# Test generated by RoostGPT for test roostPostmanTest using AI Type Azure Open AI and AI Model roost-gpt4-32k

# RoostTestHash=c43742dac4

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 10
  payload:
    path: "findByTags_get_others.csv"
    fields:
      - "tags"
    skipHeader: true
  plugins:
    expect: {}
  environments:
    staging:
      target: "{{ $processEnvironment.API_HOST }}"
      headers:
        Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"

scenarios:
  - name: "Find pets by tags failure scenarios"
    flow:
      - think: 3
      - log: "This test case is to check the behavior when no tag is sent in the query parameters"
      - get:
          url: "/pet/findByTags"
          expect: 
            - statusCode: 400
              hasProperty: ['error']
        headers:
          Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
        comment: "Without any tag provided, the server should respond with a 400 status and an error message"

      - think: 3
      - log: "This test case is to check the behavior when invalid tag is sent in the query parameters"
      - get:
          url: "/pet/findByTags?tags=invalidTag"
          expect: 
            - statusCode: 400
              hasProperty: ['error']
        headers:
          Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
        comment: "With invalid tag provided, the server should respond with a 400 status and an error message"

      - think: 3
      - log: "This test case is to check the behavior when no authorization token is provided"
      - get:
          url: "/pet/findByTags?tags=pet"
          expect: 
            - statusCode: 401
            - hasProperty: ['error']
        headers:
          Authorization: "invalidAuthToken"
        comment: "Without a valid auth token, the server should respond with a 401 status and an error message"

      - think: 3
      - log: "This test case is to check the behavior when invalid URL is used"
      - get:
          url: "/invalidUrl?tags=pet"
          expect: 
            - statusCode: 404
              hasProperty: ['error']
        headers:
          Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
        comment: "With invalid URL, the server should respond with a 404 status and an error message"
