# Test generated by RoostGPT for test roostPostmanTest using AI Type Azure Open AI and AI Model roost-gpt4-32k

# RoostTestHash=70af040573

config:
  target: "{{ $processEnvironment.API_HOST }}"
  payload:
    path: "createWithList_post_others.csv"
    fields: ["id", "username", "firstName", "lastName", "email", "password", "phone", "userStatus"]
    skipHeader: true
  plugins:
    expect: {}
scenarios:
  - name: "Invalid payloads and Error codes - User Create API"
    flow:
      - log: "Attempt to create a user with missing required fields in the payload"
        post:
          url: "/user/createWithList"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          json:
            id: {{ id }}
            username: {{ username }}
          expect:
            - hasStatusCode: 400
            - hasProperty: "description"
        think: 1
      - log: "Attempt to create a user with a malformed payload (invalid JSON)"
        post:
          url: "/user/createWithList"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          body: "{id: {{ id }}, username: {{ username }"
          expect:
            - hasStatusCode: 400
            - hasProperty: "description"
        think: 1
      - log: "Attempt to create a user with unauthorized access (invalid auth token)"
        post:
          url: "/user/createWithList"
          headers:
            Authorization: "Bearer invalid_token"
            Content-Type: "application/json"
          json:
            id: {{ id }}
            username: {{ username }}
            firstName: "{{ firstName }}"
            lastName: "{{ lastName }}"
            email: "{{ email }}"
            password: "{{ password }}"
            phone: "{{ phone }}"
            userStatus: {{ userStatus }}
          expect:
            - hasStatusCode: 401
            - hasProperty: "description"
        think: 1
      - log: "Attempt to create a user with invalid URL"
        post:
          url: "/invalidURL"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          json:
            id: {{ id }}
            username: {{ username }}
            firstName: "{{ firstName }}"
            lastName: "{{ lastName }}"
            email: "{{ email }}"
            password: "{{ password }}"
            phone: "{{ phone }}"
            userStatus: {{ userStatus }}
          expect:
            - hasStatusCode: 404
            - hasProperty: "description"
        think: 1
