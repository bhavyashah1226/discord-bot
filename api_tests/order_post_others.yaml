# Test generated by RoostGPT for test roostPostmanTest using AI Type Azure Open AI and AI Model roost-gpt4-32k

# RoostTestHash=036bac41de

config:
  target: "{{ $processEnvironment.API_HOST }}"
  environments:
    dev:
      target: "http://dev.app.com"
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "order_post_others.csv"
    fields:
      - "id"
      - "petId"
      - "quantity"
      - "shipDate"
      - "status"
      - "complete"
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - name: "Place an order for a pet"
    flow:
      - log: "Attempt to place an order with missing fields"
        post:
          url: "/store/order"
          beforeRequest: "setHeaders"
          json:
            id: "{{ id }}"
            petId: "{{ petId }}"
            shipDate: "{{ shipDate }}"
            status: "{{ status }}"
            complete: "{{ complete }}"
          expect:
            - statusCode: 400
            - hasProperty: "message"
      - think: 1

      - log: "Attempt to place an order with an invalid URL"
        post:
          url: "/store/order_invalid"
          beforeRequest: "setHeaders"
          json:
            id: "{{ id }}"
            petId: "{{ petId }}"
            quantity: "{{ quantity }}"
            shipDate: "{{ shipDate }}"
            status: "{{ status }}"
            complete: "{{ complete }}"
          expect:
            - statusCode: 404
      - think: 1

      - log: "Attempt to place an order with invalid auth token"
        post:
          url: "/store/order"
          beforeRequest: "setInvalidHeaders"
          json:
            id: "{{ id }}"
            petId: "{{ petId }}"
            quantity: "{{ quantity }}"
            shipDate: "{{ shipDate }}"
            status: "{{ status }}"
            complete: "{{ complete }}"
          expect:
            - statusCode: 401
            - hasProperty: "message"
      - think: 1

js:
  function setHeaders(requestParams, context, ee, next) {
    requestParams.headers = {
      Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}",
      'Content-Type': 'application/json'
    };
    return next();
  }

  function setInvalidHeaders(requestParams, context, ee, next) {
    requestParams.headers = {
      Authorization: "Bearer invalid_token",
      'Content-Type': 'application/json'
    };
    return next();
  }
