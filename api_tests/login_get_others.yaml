# Test generated by RoostGPT for test roostPostmanTest using AI Type Azure Open AI and AI Model roost-gpt4-32k

# RoostTestHash=474b7881ac

config:
  target: "{{ $processEnvironment.API_HOST }}"
  ensure:
    outputFolder: "./test/results"
  phases:
    - duration: 20
      arrivalRate: 2
  payload:
    path: "login_get_others.csv"
    fields:
      - "username"
      - "password"
    skipHeader: true
  plugins:
    expect: {}
scenarios:
  - name: "Test login API by checking invalid cases"
    flow:
      - log: "Sending request with missing username and password"
        get:
          url: "/user/login"
          headers:
            Authorization: "invalid_auth_token"
          expect:
            - statusCode: 400  #should respond with 'Invalid username/password supplied'
            - hasProperty: "headers['X-Rate-Limit']"
            - hasProperty: "headers['X-Expires-After']"
        think: 1
      
      - log: "Sending request with missing password"
        get:
          url: "/user/login"
          qs:
            username: "{{ username }}"  #taking from csv
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}" 
          expect:
            - statusCode: 400  #should respond with 'Invalid username/password supplied'
            - hasProperty: "headers['X-Rate-Limit']"
            - hasProperty: "headers['X-Expires-After']"
        think: 1

      - log: "Sending request with missing username"
        get:
          url: "/user/login"
          qs:
            password: "{{ password }}"  #taking from csv
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 400  #should respond with 'Invalid username/password supplied'
            - hasProperty: "headers['X-Rate-Limit']"
            - hasProperty: "headers['X-Expires-After']"
        think: 1

      - log: "Sending request with wrong url"
        get:
          url: "/user/login_wrong_url"  
          qs:
            username: "{{ username }}"  #taking from csv
            password: "{{ password }}"  #taking from csv
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404 #Invalid URL
