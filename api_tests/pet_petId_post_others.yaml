# Test generated by RoostGPT for test roostPostmanTest using AI Type Azure Open AI and AI Model roost-gpt4-32k

# RoostTestHash=99d9f02040

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "pet_petId_post_others.csv"
    fields: 
      - "petId"
      - "name"
      - "status"
    skipHeader: true
  plugins:
    expect: {}
    
scenarios:
  - name: "Update pet with form data - Negative cases"
    flow:
      - log: "Invalid url, valid payload and headers -> Expect 404 status"
        post: 
          url: "/invalid_url/{{ petId }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/x-www-form-urlencoded"
          formData:
            name: "{{ name }}"
            status: "{{ status }}"
        expect:
          - statusCode: 404
          - hasProperty: "message" # Assuming message property exists with error message

      - think: 1 # Hold for 1 second

      - log: "Invalid payload, valid url and headers -> Expect 400 status"
        post: 
          url: "/pet/{{ petId }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/x-www-form-urlencoded"
          formData:
            name: 123 # Invalid input type
            status: "{{ status }}"
        expect:
          - statusCode: 400
          - hasProperty: "message" 

      - think: 1
      
      - log: "Valid url and payload, invalid headers -> Expect 401 status"
        post: 
          url: "/pet/{{ petId }}"
          headers:
            Authorization: "InvalidToken"
            Content-Type: "application/x-www-form-urlencoded"
          formData:
            name: "{{ name }}"
            status: "{{ status }}"
        expect:
          - statusCode: 401
          - hasProperty: "message" 

      - think: 1

      - log: "Empty payload, valid url and headers -> Expect 405 status"
        post: 
          url: "/pet/{{ petId }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/x-www-form-urlencoded"
          formData: {}
        expect:
          - statusCode: 405
          - hasProperty: "message" 
        
