# Test generated by RoostGPT for test roostPostmanTest using AI Type Azure Open AI and AI Model roost-gpt4-32k

# RoostTestHash=a21296b4f6

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "pet_put_others.csv"
    fields:
      - "id"
      - "category_id"
      - "category_name"
      - "name"
      - "photoUrls"
      - "tag_id"
      - "tag_name"
      - "status"
    skipHeader: true
  plugins:
    expect: {}
scenarios:
  - name : "API without authentication"
    flow:
      - log: "Put request without Auth Header"
        put:
          url: "/pet"
          headers:
            Content-Type: "application/json"
          json:
            id: "{{ id }}"
            category:
              id: "{{ category_id }}"
              name: "{{ category_name }}"
            name: "{{ name }}"
            photoUrls: ["{{ photoUrls }}"]
            tags:
              - id: "{{ tag_id }}"
                name: "{{ tag_name }}"
            status: "{{ status }}"
          expect:
            - statusCode: 400
            - hasProperty: "message"
      - think: 5
      - log: "Put request with invalid url"
        put:
          url: "/invalid_url"
          headers:
            Content-Type: "application/json"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            id: "{{ id }}"
            category:
              id: "{{ category_id }}"
              name: "{{ category_name }}"
            name: "{{ name }}"
            photoUrls: ["{{ photoUrls }}"]
            tags:
              - id: "{{ tag_id }}"
                name: "{{ tag_name }}"
            status: "{{ status }}"
          expect:
            - statusCode: 404
      - think: 5
      - log: "Put request with invalid payload"
        put:
          url: "/pet"
          headers:
            Content-Type: "application/json"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            id: "This is an invalid ID"
            category:
              id: "{{ category_id }}"
              name: "{{ category_name }}"
            name: "{{ name }}"
            photoUrls: ["{{ photoUrls }}"]
            tags:
              - id: "{{ tag_id }}"
                name: "{{ tag_name }}"
            status: "{{ status }}"
          expect:
            - statusCode: 405
            - hasProperty: "message"
